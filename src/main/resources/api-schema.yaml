openapi: "3.0.0"
info:
  title: TODO API Document
  version: "0.0.1"
  description: TODO API document
tags:
  - name: opts
    description: 運用監視関連API
  - name: tasks
    description: タスク関連API
paths:
  /health:
    get:
      tags:
        - opts
      responses:
        '200':
          description: OK
  /tasks/:
    get:
      summary: "タスク一覧取得"
      description: "タスク一覧を取得する"
      tags:
        - tasks
      operationId: listTasks
      parameters:
        - name: limit
          in: query
          required: true
          description: "取得するタスクの最大数"
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          required: true
          description: "取得するタスクのオフセット"
          schema:
              type: integer
              format: int64
              minimum: 0
              default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
    post:
      summary: "タスク作成"
      description: "タスクを作成する"
      operationId: createTask
      tags:
        - tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskForm'
      responses:
        '201':
          description: "Created"
          headers:
            location:
              description: "作成されたリソースのURL"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
  /tasks/{taskId}:
    get:
      summary: "タスク取得"
      description: "指定されたタスクを取得する"
      tags:
          - tasks
      # operationIdはメソッド名になる
      operationId: showTask
      parameters:
        - name: taskId
          in: path
          required: true
          description: "詳細取得するためのタスクID"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundError'
components:
  schemas:
    TaskForm:
      type: object
      properties:
        title:
          type: string
          description: "タスクタイトル"
          maxLength: 256
          minLength: 1
      required:
        - title
    TaskDTO:
      # レスポンスボディのjson Schema定義
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "タスクID"
        title:
          type: string
          description: "タスクタイトル"
      required:
        - id
        - title
    PageDto:
      description: "ページング情報"
      type: object
      properties:
          limit:
            description: "リクエストされたlimit"
            type: integer
            format: int32
          offset:
            description: "リクエストされたoffset"
            type: integer
            format: int64
          size:
            description: "取得された件数"
            type: integer
            format: int32
      required:
        - limit
        - offset
        - size
    TaskListDTO:
      description: "タスク一覧"
      type : object
      properties:
        page:
          $ref: '#/components/schemas/PageDto'
        results:
          type: array
          items:
              $ref: '#/components/schemas/TaskDTO'
      required:
        - results
    ResourceNotFoundError:
      type: object
      description: "指定したリソースが存在しない"
      properties:
        title:
            type: string
            description: "エラータイトル"
            default: "Resource Not Found"
        detail:
            type: string
            description: "エラー詳細"
      required:
        - title
        - detail
    BadRequestError:
        type: object
        description: "リクエストが不正"
        properties:
            title:
                type: string
                description: "エラータイトル"
                default: "Bad Request"
            detail:
                type: string
                description: "エラー詳細"
                default: "リクエストが不正です。正しいリクエストでリトライして下さい。"
            invalid-params:
                type: array
                items:
                    $ref: '#/components/schemas/InvalidParam'
        required:
            - title
            - detail
            - invalid-params
    InvalidParam:
        type: object
        description: "不正なリクエストについての詳細"
        properties:
            name:
                type: string
                description: "エラーが発生したパラメータ名"
            reason:
                type: string
                description: "不正な理由"
        required:
            - name
            - reason